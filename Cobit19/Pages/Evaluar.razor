@page "/evaluar"
@using Cobit19.Data
@inject MetasEmpresarialesService servicioEmpresarial
@inject MetasAlineamientoService servicioAlineamiento
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Auditor")]

<h3>Evaluar</h3>

<NavLink class="nav-link" href="/agregarEmpresarial">
    <span class="oi oi-plus" aria-hidden="true"></span> Añadir Meta de alineamiento
</NavLink>

<h1>Relacionamiento de Metas Empresariales y Metas de Alineamiento</h1>
@if (Lista is null)
{
    <p><em>Ingrese una meta de alineamiento</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Meta de alineamiento</th>
                    <th class="header-col-1" onclick="selectColumn(1)">Portafolio de productos y servicios competitivos</th>
                    <th class="header-col-2" onclick="selectColumn(2)">Gestión de riesgo de negocio</th>
                    <th class="header-col-3" onclick="selectColumn(3)">Cumplimiento con las leyes y regulaciones externas</th>
                    <th class="header-col-4" onclick="selectColumn(4)">Calidad de la información financiera</th>
                    <th class="header-col-5" onclick="selectColumn(5)">Cultura de servicio orientada al cliente</th>
                    <th class="header-col-6" onclick="selectColumn(6)">Continuidad y disponibilidad del servicio del negocio</th>
                    <th class="header-col-7" onclick="selectColumn(7)">Portafolio de productos y servicios competitivos</th>
                    <th class="header-col-8" onclick="selectColumn(8)">Calidad de la información sobre gestión</th>
                    <th class="header-col-9" onclick="selectColumn(9)">Optimización de la funcionalidad de procesos</th>
                    <th class="header-col-10" onclick="selectColumn(10)">Habilidades, motivación y productividad del personal</th>
                    <th class="header-col-11" onclick="selectColumn(11)">Cumplimiento de las políticas internas</th>
                    <th class="header-col-12" onclick="selectColumn(12)">Gestión de programas de transformación digital</th>
                    <th class="header-col-13" onclick="selectColumn(13)">Innovación de productos y negocios</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var meta in Lista)
                {
                    <tr>
                        <td>@meta.MetaAlineamiento</td>
                        <td class="col-1">@meta.EG01</td>
                        <td class="col-2">@meta.EG02</td>
                        <td class="col-3">@meta.EG03</td>
                        <td class="col-4">@meta.EG04</td>
                        <td class="col-5">@meta.EG05</td>
                        <td class="col-6">@meta.EG06</td>
                        <td class="col-7">@meta.EG07</td>
                        <td class="col-8">@meta.EG08</td>
                        <td class="col-9">@meta.EG09</td>
                        <td class="col-10">@meta.EG10</td>
                        <td class="col-11">@meta.EG11</td>
                        <td class="col-12">@meta.EG12</td>
                        <td class="col-13">@meta.EG13</td>
                        <td>
                            <div class="d-flex justify-content-between">
                                <a href="/editarTablaEmpresarial/@meta.Id">
                                    <span class="oi oi-pencil" aria-hidden="true"></span> Editar
                                </a>
                                <a href="/eliminarTablaEmpresarial/@meta.Id">
                                    <span class="oi oi-trash" aria-hidden="true"></span> Eliminar
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


<div class="mt-3">
    <NavLink class="btn btn-primary" @onclick="Continuar">
        Continuar
    </NavLink>
</div>

@code {
    List<MetasEmpresariales> Lista;
    int totalMetasEmpresariales;
    int totalMetasAlineamiento;

    protected override async Task OnInitializedAsync()
    {
        Lista = await Task.Run(() => servicioEmpresarial.GetMetasEmpresarialesAsync());
        totalMetasEmpresariales = await servicioEmpresarial.ContarMetasEmpresarialesAsync();
        totalMetasAlineamiento = await servicioAlineamiento.ContarMetasAlineamientosAsync();
    }

    private void Continuar()
    {
        if(totalMetasEmpresariales != 13)
        {
            _ = Js.InvokeVoidAsync("alert", "No se puede continuar, no hay exactamente 13 metas de alineamiento calificadas.");
        }
        else if(totalMetasAlineamiento != 40)
        {
            _ = Js.InvokeVoidAsync("alert", "No se puede continuar, no hay exactamente 40 metas de gobierno calificadas.");
        }
    }
}

@inject IJSRuntime Js;

<script>
    function selectColumn(colIndex) {
        let header = document.querySelector('.header-col-' + colIndex);
        let cells = document.querySelectorAll('.col-' + colIndex);

        // Verificar si la columna está seleccionada
        let isSelected = header.classList.contains('selected');

        if (isSelected) {
            // Si está seleccionada, deseleccionar solo la columna actual
            header.classList.remove('selected');
            cells.forEach(cell => cell.classList.remove('selected'));

            // Deseleccionar las metas de alineamiento correspondientes
            cells.forEach(cell => {
                if (cell.textContent.trim() === 'P') {
                    let rowIndex = cell.parentNode.rowIndex - 1;
                    let metaAlineamiento = document.querySelector('tbody').children[rowIndex].querySelector('td:first-child');
                    if (metaAlineamiento) {
                        metaAlineamiento.classList.remove('meta-selected');
                    }
                }
            });
        } else {
            // Si no está seleccionada, seleccionar toda la columna
            header.classList.add('selected');
            cells.forEach(cell => cell.classList.add('selected'));

            // Seleccionar las metas de alineamiento correspondientes
            cells.forEach(cell => {
                if (cell.textContent.trim() === 'P') {
                    let rowIndex = cell.parentNode.rowIndex - 1;
                    let metaAlineamiento = document.querySelector('tbody').children[rowIndex].querySelector('td:first-child');
                    if (metaAlineamiento) {
                        metaAlineamiento.classList.add('meta-selected');
                    }
                }
            });
        }
    }
</script>

<style>
    .selected {
        background-color: darkslategrey !important; /* Color de fondo para las celdas 'P' seleccionadas */
        color: white; /* Color del texto para las celdas 'P' seleccionadas */
    }

    .meta-selected {
        background-color: lightblue !important; /* Color de fondo para las metas de alineamiento seleccionadas */
    }

    th {
        cursor: pointer; /* Cambia el cursor a pointer en las columnas seleccionables */
    }

    .table-hover tbody tr:hover td,
    .table-hover tbody tr:hover th {
        background-color: #f5f5f5; /* Color de fondo al hacer hover en las filas */
    }
</style>